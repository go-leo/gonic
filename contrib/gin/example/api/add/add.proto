syntax = "proto3";
package add;
option go_package = "github.com/go-leo/example/api/add;add";

// #HTTP @ApplicationPath("/")
// #HTTP @Consume("","")
// #HTTP @Produce("","")
service Add { // this is trail
  // #HTTP @Method("GET","POST")
  // #HTTP @Path("/")
  // #HTTP @Consume("")
  // #HTTP @Produce("")
  // #HTTP @PathParam("a",default:"1",encoded),@PathParam("b")
  // #HTTP @QueryParam("a"),@QueryParams("b")
  // #HTTP @FormParam("a"),@FormParam("b")
  // #HTTP @BeanParam("*"),
  // #HTTP @HeaderParam("a"),@HeaderParam("b")
  // #HTTP @CookieParam("a"),@CookieParam("b")
  rpc Sum (SumRequest) returns (SumReply) {}
  // #HTTP @Method("GET","POST")
  // #HTTP @Path("/")
  // #HTTP @Consumes("","")
  // #HTTP @Produces("","")
  // #HTTP @PathParam("a"),@PathParam("b")
  // #HTTP @QueryParam("a"),@QueryParams("b")
  // #HTTP @FormParam("a"),@FormParam("b")
  // #HTTP @HeaderParam("a"),@HeaderParam("b")
  // #HTTP @CookieParam("a"),@CookieParam("b")
  rpc Concat (ConcatRequest) returns (ConcatReply) {}
}

// The sum request contains two parameters.
message SumRequest {
  // #HTTP @CookieParam("a"),@CookieParam("b")
  int64 a = 1;
  int64 b = 2;
}

// The sum response contains the result of the calculation.
message SumReply {
  int64 v = 1;
  string err = 2;
}

// The Concat request contains two parameters.
message ConcatRequest {
  string a = 1;
  string b = 2;
}

// The Concat response contains the result of the concatenation.
message ConcatReply {
  string v = 1;
  string err = 2;
}

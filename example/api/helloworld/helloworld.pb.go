// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: example/api/helloworld/helloworld.proto

package helloworld

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age    int32   `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Salary float64 `protobuf:"fixed64,3,opt,name=salary,proto3" json:"salary,omitempty"`
	Token  string  `protobuf:"bytes,4,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_api_helloworld_helloworld_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_api_helloworld_helloworld_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_example_api_helloworld_helloworld_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelloRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *HelloRequest) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *HelloRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type HelloReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_api_helloworld_helloworld_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_example_api_helloworld_helloworld_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_example_api_helloworld_helloworld_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_example_api_helloworld_helloworld_proto protoreflect.FileDescriptor

var file_example_api_helloworld_helloworld_proto_rawDesc = []byte{
	0x0a, 0x27, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x62, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x26, 0x0a, 0x0a, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0xc5, 0x08, 0x0a, 0x07, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x50, 0x0a,
	0x1a, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x55, 0x72, 0x69, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x1f, 0x47, 0x45, 0x54, 0x55, 0x72, 0x69, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x22, 0x47, 0x45, 0x54, 0x55, 0x72, 0x69,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x5e, 0x0a, 0x28, 0x50, 0x4f, 0x53, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4a, 0x53, 0x4f,
	0x4e, 0x50, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x5f, 0x0a, 0x29, 0x50, 0x41, 0x54, 0x43, 0x48, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50,
	0x75, 0x72, 0x65, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x59, 0x0a, 0x23, 0x50, 0x55, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4a, 0x53,
	0x4f, 0x4e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x73, 0x63, 0x69, 0x69, 0x4a, 0x53,
	0x4f, 0x4e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x21,
	0x50, 0x4f, 0x53, 0x54, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x75, 0x66, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x75, 0x66, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x23, 0x50, 0x4f, 0x53, 0x54, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4a, 0x53, 0x4f, 0x4e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x53, 0x0a, 0x1d, 0x50, 0x4f, 0x53, 0x54, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x12, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x14, 0x50, 0x4f, 0x53, 0x54, 0x53, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x18,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09, 0x50, 0x4f, 0x53, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0e, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x50, 0x43, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x6c, 0x65, 0x6f, 0x2f, 0x67,
	0x6f, 0x72, 0x73, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_api_helloworld_helloworld_proto_rawDescOnce sync.Once
	file_example_api_helloworld_helloworld_proto_rawDescData = file_example_api_helloworld_helloworld_proto_rawDesc
)

func file_example_api_helloworld_helloworld_proto_rawDescGZIP() []byte {
	file_example_api_helloworld_helloworld_proto_rawDescOnce.Do(func() {
		file_example_api_helloworld_helloworld_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_api_helloworld_helloworld_proto_rawDescData)
	})
	return file_example_api_helloworld_helloworld_proto_rawDescData
}

var file_example_api_helloworld_helloworld_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_example_api_helloworld_helloworld_proto_goTypes = []interface{}{
	(*HelloRequest)(nil), // 0: helloworld.HelloRequest
	(*HelloReply)(nil),   // 1: helloworld.HelloReply
}
var file_example_api_helloworld_helloworld_proto_depIdxs = []int32{
	0,  // 0: helloworld.Greeter.DELETEUriBindingJSONRender:input_type -> helloworld.HelloRequest
	0,  // 1: helloworld.Greeter.GETUriBindingIndentedJSONRender:input_type -> helloworld.HelloRequest
	0,  // 2: helloworld.Greeter.GETUriQueryBindingSecureJSONRender:input_type -> helloworld.HelloRequest
	0,  // 3: helloworld.Greeter.POSTHeaderFormPostBindingJSONPJSONRender:input_type -> helloworld.HelloRequest
	0,  // 4: helloworld.Greeter.PATCHHeaderProtoFormBindingPureJSONRender:input_type -> helloworld.HelloRequest
	0,  // 5: helloworld.Greeter.PUTHeaderJSONBindingAsciiJSONRender:input_type -> helloworld.HelloRequest
	0,  // 6: helloworld.Greeter.POSTProtoBufBindingProtoBufRender:input_type -> helloworld.HelloRequest
	0,  // 7: helloworld.Greeter.POSTProtoJSONBindingProtoJSONRender:input_type -> helloworld.HelloRequest
	0,  // 8: helloworld.Greeter.POSTCustomBindingCustomRender:input_type -> helloworld.HelloRequest
	0,  // 9: helloworld.Greeter.NotDefine:input_type -> helloworld.HelloRequest
	0,  // 10: helloworld.Greeter.POSTSetHeaderTrailer:input_type -> helloworld.HelloRequest
	0,  // 11: helloworld.Greeter.POSTError:input_type -> helloworld.HelloRequest
	0,  // 12: helloworld.Greeter.POSTGRPCStatus:input_type -> helloworld.HelloRequest
	1,  // 13: helloworld.Greeter.DELETEUriBindingJSONRender:output_type -> helloworld.HelloReply
	1,  // 14: helloworld.Greeter.GETUriBindingIndentedJSONRender:output_type -> helloworld.HelloReply
	1,  // 15: helloworld.Greeter.GETUriQueryBindingSecureJSONRender:output_type -> helloworld.HelloReply
	1,  // 16: helloworld.Greeter.POSTHeaderFormPostBindingJSONPJSONRender:output_type -> helloworld.HelloReply
	1,  // 17: helloworld.Greeter.PATCHHeaderProtoFormBindingPureJSONRender:output_type -> helloworld.HelloReply
	1,  // 18: helloworld.Greeter.PUTHeaderJSONBindingAsciiJSONRender:output_type -> helloworld.HelloReply
	1,  // 19: helloworld.Greeter.POSTProtoBufBindingProtoBufRender:output_type -> helloworld.HelloReply
	1,  // 20: helloworld.Greeter.POSTProtoJSONBindingProtoJSONRender:output_type -> helloworld.HelloReply
	1,  // 21: helloworld.Greeter.POSTCustomBindingCustomRender:output_type -> helloworld.HelloReply
	1,  // 22: helloworld.Greeter.NotDefine:output_type -> helloworld.HelloReply
	1,  // 23: helloworld.Greeter.POSTSetHeaderTrailer:output_type -> helloworld.HelloReply
	1,  // 24: helloworld.Greeter.POSTError:output_type -> helloworld.HelloReply
	1,  // 25: helloworld.Greeter.POSTGRPCStatus:output_type -> helloworld.HelloReply
	13, // [13:26] is the sub-list for method output_type
	0,  // [0:13] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_example_api_helloworld_helloworld_proto_init() }
func file_example_api_helloworld_helloworld_proto_init() {
	if File_example_api_helloworld_helloworld_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_api_helloworld_helloworld_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_api_helloworld_helloworld_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_api_helloworld_helloworld_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_api_helloworld_helloworld_proto_goTypes,
		DependencyIndexes: file_example_api_helloworld_helloworld_proto_depIdxs,
		MessageInfos:      file_example_api_helloworld_helloworld_proto_msgTypes,
	}.Build()
	File_example_api_helloworld_helloworld_proto = out.File
	file_example_api_helloworld_helloworld_proto_rawDesc = nil
	file_example_api_helloworld_helloworld_proto_goTypes = nil
	file_example_api_helloworld_helloworld_proto_depIdxs = nil
}

// Code generated by "gors -service ReaderString"; DO NOT EDIT.

package demo

import (
	gin "github.com/gin-gonic/gin"
	gors "github.com/go-leo/gors"
	io "io"
	http "net/http"
)

func ReaderStringRoutes(srv ReaderString, opts ...gors.Option) []gors.Route {
	options := gors.New(opts...)
	_ = options
	return []gors.Route{
		gors.NewRoute(
			http.MethodGet,
			"/api/ReaderString/Get",
			func(c *gin.Context) {
				var ctx = gors.NewContext(c)
				var req io.Reader
				var resp string
				var err error
				req = c.Request.Body
				resp, err = srv.GetReaderString(ctx, req)
				if err != nil {
					gors.ErrorRender(ctx, err, options.ErrorHandler)
					return
				}
				gors.ResponseRender(ctx, gors.StatusCode(ctx), resp, "text/plain; charset=utf-8", gors.TextRender, options.ResponseWrapper)
			},
		),
		gors.NewRoute(
			http.MethodPost,
			"/api/ReaderString/Post",
			func(c *gin.Context) {
				var ctx = gors.NewContext(c)
				var req io.Reader
				var resp string
				var err error
				req = c.Request.Body
				resp, err = srv.PostReaderString(ctx, req)
				if err != nil {
					gors.ErrorRender(ctx, err, options.ErrorHandler)
					return
				}
				gors.ResponseRender(ctx, gors.StatusCode(ctx), resp, "text/go", gors.StringRender, options.ResponseWrapper)
			},
		),
	}
}

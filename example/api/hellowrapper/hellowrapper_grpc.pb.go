// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.2
// source: example/api/hellowrapper/hellowrapper.proto

package hellowrapper

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Greeter_POSTProtoBufBindingProtoBufRender_FullMethodName   = "/hellowrapper.Greeter/POSTProtoBufBindingProtoBufRender"
	Greeter_POSTProtoJSONBindingProtoJSONRender_FullMethodName = "/hellowrapper.Greeter/POSTProtoJSONBindingProtoJSONRender"
	Greeter_NotDefine_FullMethodName                           = "/hellowrapper.Greeter/NotDefine"
	Greeter_POSTError_FullMethodName                           = "/hellowrapper.Greeter/POSTError"
	Greeter_POSTGRPCStatus_FullMethodName                      = "/hellowrapper.Greeter/POSTGRPCStatus"
)

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GreeterClient interface {
	// @GORS @POST @Path(/ProtoBufBinding/ProtoBufRender) @ProtoBufBinding @ProtoBufRender
	POSTProtoBufBindingProtoBufRender(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	// @GORS @POST @Path(/ProtoJSONBinding/ProtoJSONRender) @ProtoJSONBinding @ProtoJSONRender
	POSTProtoJSONBindingProtoJSONRender(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	NotDefine(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	// @GORS @POST @Path(/Error) @ProtoJSONBinding @ProtoJSONRender
	POSTError(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	// @GORS @POST @Path(/GRPCStatus) @ProtoJSONBinding @ProtoJSONRender
	POSTGRPCStatus(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
}

type greeterClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterClient(cc grpc.ClientConnInterface) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) POSTProtoBufBindingProtoBufRender(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, Greeter_POSTProtoBufBindingProtoBufRender_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) POSTProtoJSONBindingProtoJSONRender(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, Greeter_POSTProtoJSONBindingProtoJSONRender_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) NotDefine(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, Greeter_NotDefine_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) POSTError(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, Greeter_POSTError_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) POSTGRPCStatus(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, Greeter_POSTGRPCStatus_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
// All implementations must embed UnimplementedGreeterServer
// for forward compatibility
type GreeterServer interface {
	// @GORS @POST @Path(/ProtoBufBinding/ProtoBufRender) @ProtoBufBinding @ProtoBufRender
	POSTProtoBufBindingProtoBufRender(context.Context, *HelloRequest) (*HelloReply, error)
	// @GORS @POST @Path(/ProtoJSONBinding/ProtoJSONRender) @ProtoJSONBinding @ProtoJSONRender
	POSTProtoJSONBindingProtoJSONRender(context.Context, *HelloRequest) (*HelloReply, error)
	NotDefine(context.Context, *HelloRequest) (*HelloReply, error)
	// @GORS @POST @Path(/Error) @ProtoJSONBinding @ProtoJSONRender
	POSTError(context.Context, *HelloRequest) (*HelloReply, error)
	// @GORS @POST @Path(/GRPCStatus) @ProtoJSONBinding @ProtoJSONRender
	POSTGRPCStatus(context.Context, *HelloRequest) (*HelloReply, error)
	mustEmbedUnimplementedGreeterServer()
}

// UnimplementedGreeterServer must be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (UnimplementedGreeterServer) POSTProtoBufBindingProtoBufRender(context.Context, *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method POSTProtoBufBindingProtoBufRender not implemented")
}
func (UnimplementedGreeterServer) POSTProtoJSONBindingProtoJSONRender(context.Context, *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method POSTProtoJSONBindingProtoJSONRender not implemented")
}
func (UnimplementedGreeterServer) NotDefine(context.Context, *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotDefine not implemented")
}
func (UnimplementedGreeterServer) POSTError(context.Context, *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method POSTError not implemented")
}
func (UnimplementedGreeterServer) POSTGRPCStatus(context.Context, *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method POSTGRPCStatus not implemented")
}
func (UnimplementedGreeterServer) mustEmbedUnimplementedGreeterServer() {}

// UnsafeGreeterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GreeterServer will
// result in compilation errors.
type UnsafeGreeterServer interface {
	mustEmbedUnimplementedGreeterServer()
}

func RegisterGreeterServer(s grpc.ServiceRegistrar, srv GreeterServer) {
	s.RegisterService(&Greeter_ServiceDesc, srv)
}

func _Greeter_POSTProtoBufBindingProtoBufRender_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).POSTProtoBufBindingProtoBufRender(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Greeter_POSTProtoBufBindingProtoBufRender_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).POSTProtoBufBindingProtoBufRender(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_POSTProtoJSONBindingProtoJSONRender_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).POSTProtoJSONBindingProtoJSONRender(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Greeter_POSTProtoJSONBindingProtoJSONRender_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).POSTProtoJSONBindingProtoJSONRender(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_NotDefine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).NotDefine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Greeter_NotDefine_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).NotDefine(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_POSTError_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).POSTError(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Greeter_POSTError_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).POSTError(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_POSTGRPCStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).POSTGRPCStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Greeter_POSTGRPCStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).POSTGRPCStatus(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Greeter_ServiceDesc is the grpc.ServiceDesc for Greeter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Greeter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "hellowrapper.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "POSTProtoBufBindingProtoBufRender",
			Handler:    _Greeter_POSTProtoBufBindingProtoBufRender_Handler,
		},
		{
			MethodName: "POSTProtoJSONBindingProtoJSONRender",
			Handler:    _Greeter_POSTProtoJSONBindingProtoJSONRender_Handler,
		},
		{
			MethodName: "NotDefine",
			Handler:    _Greeter_NotDefine_Handler,
		},
		{
			MethodName: "POSTError",
			Handler:    _Greeter_POSTError_Handler,
		},
		{
			MethodName: "POSTGRPCStatus",
			Handler:    _Greeter_POSTGRPCStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/api/hellowrapper/hellowrapper.proto",
}
